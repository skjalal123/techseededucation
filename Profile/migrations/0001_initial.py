# Generated by Django 3.2.11 on 2022-02-09 17:12

import Profile.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='myUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('profile', models.FileField(blank=True, null=True, upload_to='profile', verbose_name='Profile')),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('Type', models.CharField(blank=True, choices=[('Student', 'Student'), ('Author', 'Author')], max_length=8, null=True, verbose_name='Type')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('mobile', models.CharField(blank=True, max_length=13, null=True, verbose_name='Mobile')),
                ('city', models.CharField(blank=True, max_length=25, null=True, verbose_name='City')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('interest', models.CharField(blank=True, max_length=10, null=True, verbose_name='Interest')),
                ('hobby', models.CharField(blank=True, max_length=100, null=True, verbose_name='Hobby')),
                ('is_student', models.BooleanField(default=True)),
                ('is_teacher', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('seed_coin', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'My User',
                'verbose_name_plural': 'My Users',
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', Profile.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='qualification',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('Degree', models.CharField(max_length=100)),
                ('passing_year', models.DateField()),
                ('institute', models.CharField(max_length=200)),
                ('percentage', models.FloatField(default=0)),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_qualification', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OneTimePassword',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('One_Time_Password', models.IntegerField(blank=True, unique=True)),
                ('expiryDate', models.DateTimeField(default=Profile.models.setExpiryDateTimeForOTP)),
                ('profileId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_otp', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('company_name', models.CharField(max_length=200)),
                ('position', models.CharField(max_length=100)),
                ('duration', models.DurationField()),
                ('description', models.TextField()),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_experience', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='achievement',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('certificate', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_achievement', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
